"use strict";(self.webpackChunknodebb=self.webpackChunknodebb||[]).push([[3731],{53731:(t,e,r)=>{function n(t,e){const r=d(t),n=d(e),o=r.pop(),i=n.pop(),s=u(r,n);return 0!==s?s:o&&i?u(o.split("."),i.split(".")):o||i?o?-1:1:0}r.r(e),r.d(e,{compare:()=>i,default:()=>n,satisfies:()=>s,validate:()=>o});const o=t=>"string"==typeof t&&/^[v\d]/.test(t)&&a.test(t),i=(t,e,r)=>{g(r);const o=n(t,e);return l[r].includes(o)},s=(t,e)=>{const r=e.match(/^([<>=~^]+)/),n=r?r[1]:"=";if("^"!==n&&"~"!==n)return i(t,e,n);const[o,s,a]=d(t),[p,c,l]=d(e);return 0===f(o,p)&&("^"===n?u([s,a],[c,l])>=0:0===f(s,c)&&f(a,l)>=0)};n.validate=o,n.compare=i,n.satisfies=s;const a=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,d=t=>{if("string"!=typeof t)throw new TypeError("Invalid argument expected string");const e=t.match(a);if(!e)throw new Error(`Invalid argument not valid semver ('${t}' received)`);return e.shift(),e},p=t=>"*"===t||"x"===t||"X"===t,c=t=>{const e=parseInt(t,10);return isNaN(e)?t:e},f=(t,e)=>{if(p(t)||p(e))return 0;const[r,n]=((t,e)=>typeof t!=typeof e?[String(t),String(e)]:[t,e])(c(t),c(e));return r>n?1:r<n?-1:0},u=(t,e)=>{for(let r=0;r<Math.max(t.length,e.length);r++){const n=f(t[r]||0,e[r]||0);if(0!==n)return n}return 0},l={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]},h=Object.keys(l),g=t=>{if("string"!=typeof t)throw new TypeError("Invalid operator type, expected string but got "+typeof t);if(-1===h.indexOf(t))throw new Error(`Invalid operator, expected one of ${h.join("|")}`)}}}]);